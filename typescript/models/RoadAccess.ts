/* tslint:disable */
/* eslint-disable */
/**
 * Sequence Optimization
 * With the Sequence Optimization service you can find the best route for your transports.
 *
 * The version of the OpenAPI document: 1.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Use these coordinates for matching to the nearest road. Implies **includeLastMeters**, i.e. the air-line connection between the location coordinates and the matched coordinates is included in the relation distance and travel time. This is useful if the location should not be matched to the nearest possible road but to some road further away, e.g. garage exit at a different road.
 * @export
 * @interface RoadAccess
 */
export interface RoadAccess {
    /**
     * The latitude value in degrees (WGS84/EPSG:4326) from south to north.
     * @type {number}
     * @memberof RoadAccess
     */
    latitude: number;
    /**
     * The longitude value in degrees (WGS84/EPSG:4326) from west to east.
     * @type {number}
     * @memberof RoadAccess
     */
    longitude: number;
}

/**
 * Check if a given object implements the RoadAccess interface.
 */
export function instanceOfRoadAccess(value: object): value is RoadAccess {
    if (!('latitude' in value) || value['latitude'] === undefined) return false;
    if (!('longitude' in value) || value['longitude'] === undefined) return false;
    return true;
}

export function RoadAccessFromJSON(json: any): RoadAccess {
    return RoadAccessFromJSONTyped(json, false);
}

export function RoadAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoadAccess {
    if (json == null) {
        return json;
    }
    return {
        
        'latitude': json['latitude'],
        'longitude': json['longitude'],
    };
}

  export function RoadAccessToJSON(json: any): RoadAccess {
      return RoadAccessToJSONTyped(json, false);
  }

  export function RoadAccessToJSONTyped(value?: RoadAccess | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'latitude': value['latitude'],
        'longitude': value['longitude'],
    };
}

