/*
 * Sequence Optimization
 * With the Sequence Optimization service you can find the best route for your transports.
 *
 * The version of the OpenAPI document: 1.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.sequenceoptimization.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.sequenceoptimization.model.PositionInRoute;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.sequenceoptimization.ApiClient;
/**
 * Attributes for a location of type CUSTOMER.
 */
@JsonPropertyOrder({
  CustomerLocationAttributes.JSON_PROPERTY_SERVICE_TIME_PER_TRANSPORT_STOP,
  CustomerLocationAttributes.JSON_PROPERTY_POSITION_IN_ROUTE,
  CustomerLocationAttributes.JSON_PROPERTY_ROUTE_SECTION_NUMBER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-27T08:41:48.082993405Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class CustomerLocationAttributes {
  public static final String JSON_PROPERTY_SERVICE_TIME_PER_TRANSPORT_STOP = "serviceTimePerTransportStop";
  private Integer serviceTimePerTransportStop = 0;

  public static final String JSON_PROPERTY_POSITION_IN_ROUTE = "positionInRoute";
  private JsonNullable<PositionInRoute> positionInRoute = JsonNullable.<PositionInRoute>undefined();

  public static final String JSON_PROPERTY_ROUTE_SECTION_NUMBER = "routeSectionNumber";
  private JsonNullable<Integer> routeSectionNumber = JsonNullable.<Integer>undefined();

  public CustomerLocationAttributes() { 
  }

  public CustomerLocationAttributes serviceTimePerTransportStop(Integer serviceTimePerTransportStop) {
    this.serviceTimePerTransportStop = serviceTimePerTransportStop;
    return this;
  }

  /**
   * The service time [s] that is required each time this location is visited in order to pick goods up or to deliver them. The location-dependent service time represents, for example, the time to enter the premises or to register at a customer. Besides a location-dependent service time, the user may specify an additional transport-dependent service time at the transports.
   * minimum: 0
   * @return serviceTimePerTransportStop
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVICE_TIME_PER_TRANSPORT_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getServiceTimePerTransportStop() {
    return serviceTimePerTransportStop;
  }


  @JsonProperty(JSON_PROPERTY_SERVICE_TIME_PER_TRANSPORT_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServiceTimePerTransportStop(Integer serviceTimePerTransportStop) {
    this.serviceTimePerTransportStop = serviceTimePerTransportStop;
  }


  public CustomerLocationAttributes positionInRoute(PositionInRoute positionInRoute) {
    this.positionInRoute = JsonNullable.<PositionInRoute>of(positionInRoute);
    return this;
  }

  /**
   * Get positionInRoute
   * @return positionInRoute
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public PositionInRoute getPositionInRoute() {
        return positionInRoute.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_IN_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PositionInRoute> getPositionInRoute_JsonNullable() {
    return positionInRoute;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_IN_ROUTE)
  public void setPositionInRoute_JsonNullable(JsonNullable<PositionInRoute> positionInRoute) {
    this.positionInRoute = positionInRoute;
  }

  public void setPositionInRoute(PositionInRoute positionInRoute) {
    this.positionInRoute = JsonNullable.<PositionInRoute>of(positionInRoute);
  }


  public CustomerLocationAttributes routeSectionNumber(Integer routeSectionNumber) {
    this.routeSectionNumber = JsonNullable.<Integer>of(routeSectionNumber);
    return this;
  }

  /**
   * If routeSectionNumber is specified, a stop at this customer location will be visited after stops at customer locations with specified lower routeSectionNumber and before stops at customer locations with specified higher routeSectionNumber. Consequently, the route section numbers of stops at customer locations must be non-decreasing.   If specified, positionInRoute must not be set for the same location.  See [here](./concepts/route-sections-and-position-route) for more information.
   * minimum: 1
   * @return routeSectionNumber
   */
  @javax.annotation.Nullable
  @JsonIgnore
  public Integer getRouteSectionNumber() {
        return routeSectionNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROUTE_SECTION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getRouteSectionNumber_JsonNullable() {
    return routeSectionNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_ROUTE_SECTION_NUMBER)
  public void setRouteSectionNumber_JsonNullable(JsonNullable<Integer> routeSectionNumber) {
    this.routeSectionNumber = routeSectionNumber;
  }

  public void setRouteSectionNumber(Integer routeSectionNumber) {
    this.routeSectionNumber = JsonNullable.<Integer>of(routeSectionNumber);
  }


  /**
   * Return true if this CustomerLocationAttributes object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerLocationAttributes customerLocationAttributes = (CustomerLocationAttributes) o;
    return Objects.equals(this.serviceTimePerTransportStop, customerLocationAttributes.serviceTimePerTransportStop) &&
        equalsNullable(this.positionInRoute, customerLocationAttributes.positionInRoute) &&
        equalsNullable(this.routeSectionNumber, customerLocationAttributes.routeSectionNumber);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceTimePerTransportStop, hashCodeNullable(positionInRoute), hashCodeNullable(routeSectionNumber));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerLocationAttributes {\n");
    sb.append("    serviceTimePerTransportStop: ").append(toIndentedString(serviceTimePerTransportStop)).append("\n");
    sb.append("    positionInRoute: ").append(toIndentedString(positionInRoute)).append("\n");
    sb.append("    routeSectionNumber: ").append(toIndentedString(routeSectionNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `serviceTimePerTransportStop` to the URL query string
    if (getServiceTimePerTransportStop() != null) {
      joiner.add(String.format("%sserviceTimePerTransportStop%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getServiceTimePerTransportStop()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `positionInRoute` to the URL query string
    if (getPositionInRoute() != null) {
      joiner.add(String.format("%spositionInRoute%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPositionInRoute()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `routeSectionNumber` to the URL query string
    if (getRouteSectionNumber() != null) {
      joiner.add(String.format("%srouteSectionNumber%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getRouteSectionNumber()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

