/*
 * Sequence Optimization
 * With the Sequence Optimization service you can find the best route for your transports.
 *
 * The version of the OpenAPI document: 1.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.sequenceoptimization.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.sequenceoptimization.model.ErrorResponse;
import com.ptvgroup.developer.client.sequenceoptimization.model.OperationStatus;
import com.ptvgroup.developer.client.sequenceoptimization.model.OptimizedRoute;
import com.ptvgroup.developer.client.sequenceoptimization.model.Warning;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.ptvgroup.developer.client.sequenceoptimization.ApiClient;
/**
 * Contains the results of an optimization. If the &#39;status&#39; is &#39;RUNNING&#39;, the calculation is still running and no further properties are set. If the &#39;status&#39; is &#39;SUCCEEDED&#39;, the optimization result is present as property &#39;optimizedRoute&#39;. If the &#39;status&#39; is &#39;FAILED&#39;, the failure result is present as property &#39;error&#39;.
 */
@JsonPropertyOrder({
  OptimizedRouteResponse.JSON_PROPERTY_STATUS,
  OptimizedRouteResponse.JSON_PROPERTY_OPTIMIZED_ROUTE,
  OptimizedRouteResponse.JSON_PROPERTY_ERROR,
  OptimizedRouteResponse.JSON_PROPERTY_WARNINGS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-27T08:41:48.082993405Z[Etc/UTC]", comments = "Generator version: 7.9.0")
public class OptimizedRouteResponse {
  public static final String JSON_PROPERTY_STATUS = "status";
  private OperationStatus status;

  public static final String JSON_PROPERTY_OPTIMIZED_ROUTE = "optimizedRoute";
  private OptimizedRoute optimizedRoute;

  public static final String JSON_PROPERTY_ERROR = "error";
  private ErrorResponse error;

  public static final String JSON_PROPERTY_WARNINGS = "warnings";
  private List<Warning> warnings;

  public OptimizedRouteResponse() { 
  }

  public OptimizedRouteResponse status(OperationStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OperationStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(OperationStatus status) {
    this.status = status;
  }


  public OptimizedRouteResponse optimizedRoute(OptimizedRoute optimizedRoute) {
    this.optimizedRoute = optimizedRoute;
    return this;
  }

  /**
   * Get optimizedRoute
   * @return optimizedRoute
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIMIZED_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OptimizedRoute getOptimizedRoute() {
    return optimizedRoute;
  }


  @JsonProperty(JSON_PROPERTY_OPTIMIZED_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptimizedRoute(OptimizedRoute optimizedRoute) {
    this.optimizedRoute = optimizedRoute;
  }


  public OptimizedRouteResponse error(ErrorResponse error) {
    this.error = error;
    return this;
  }

  /**
   * A human readable message that describes the error. Set and used only when operation status is FAILED.
   * @return error
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ErrorResponse getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(ErrorResponse error) {
    this.error = error;
  }


  public OptimizedRouteResponse warnings(List<Warning> warnings) {
    this.warnings = warnings;
    return this;
  }

  public OptimizedRouteResponse addWarningsItem(Warning warningsItem) {
    if (this.warnings == null) {
      this.warnings = new ArrayList<>();
    }
    this.warnings.add(warningsItem);
    return this;
  }

  /**
   * A list of warnings concerning the validity of the result.
   * @return warnings
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Warning> getWarnings() {
    return warnings;
  }


  @JsonProperty(JSON_PROPERTY_WARNINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarnings(List<Warning> warnings) {
    this.warnings = warnings;
  }


  /**
   * Return true if this OptimizedRouteResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizedRouteResponse optimizedRouteResponse = (OptimizedRouteResponse) o;
    return Objects.equals(this.status, optimizedRouteResponse.status) &&
        Objects.equals(this.optimizedRoute, optimizedRouteResponse.optimizedRoute) &&
        Objects.equals(this.error, optimizedRouteResponse.error) &&
        Objects.equals(this.warnings, optimizedRouteResponse.warnings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, optimizedRoute, error, warnings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizedRouteResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    optimizedRoute: ").append(toIndentedString(optimizedRoute)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    warnings: ").append(toIndentedString(warnings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `status` to the URL query string
    if (getStatus() != null) {
      joiner.add(String.format("%sstatus%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStatus()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `optimizedRoute` to the URL query string
    if (getOptimizedRoute() != null) {
      joiner.add(getOptimizedRoute().toUrlQueryString(prefix + "optimizedRoute" + suffix));
    }

    // add `error` to the URL query string
    if (getError() != null) {
      joiner.add(getError().toUrlQueryString(prefix + "error" + suffix));
    }

    // add `warnings` to the URL query string
    if (getWarnings() != null) {
      for (int i = 0; i < getWarnings().size(); i++) {
        if (getWarnings().get(i) != null) {
          joiner.add(getWarnings().get(i).toUrlQueryString(String.format("%swarnings%s%s", prefix, suffix,
          "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    return joiner.toString();
  }
}

